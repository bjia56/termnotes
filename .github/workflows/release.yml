name: Build and publish

on:
  workflow_dispatch:
    inputs:
      beta:
        required: true
        type: boolean
      dry_run:
        required: true
        type: boolean

jobs:
  ensure-tag-available:
    name: Ensure tag available
    runs-on: ubuntu-latest
    permissions:
      contents: read

    outputs:
      version: ${{ steps.set-version.outputs.version }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Extract version and check if tag exists
        id: set-version
        run: |
          # Create virtualenv and install termnotes
          python -m venv venv
          source venv/bin/activate
          pip install -e .

          # Extract version from --version flag
          VERSION=$(termnotes --version | grep -oP 'termnotes \K[0-9]+\.[0-9]+\.[0-9]+')

          if [ -z "$VERSION" ]; then
            echo "Failed to extract version from termnotes --version"
            exit 1
          fi

          echo "Detected version: $VERSION"
          TAG="v$VERSION"

          # Check if tag already exists
          if git rev-parse "$TAG" >/dev/null 2>&1; then
            echo "Error: Tag $TAG already exists. Please bump the version in __init__.py"
            exit 1
          fi

          echo "Tag $TAG is available for creation"
          echo "version=$TAG" >> $GITHUB_OUTPUT

  build:
    name: Build
    needs: ensure-tag-available
    permissions:
      contents: read
      packages: write
    uses: ./.github/workflows/build.yml

  publish:
    name: Publish
    needs: [ensure-tag-available, build]
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: termnotes-executable
          path: .

      - name: Release
        if: ${{ !inputs.dry_run }}
        uses: softprops/action-gh-release@v2
        with:
          files: termnotes.exe
          tag_name: ${{ needs.ensure-tag-available.outputs.version }}
          generate_release_notes: true
          prerelease: ${{ inputs.beta }}